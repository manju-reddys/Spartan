[package]
name = "spartan"
version = "0.9.0"
authors = ["Srinath Setty <srinath@microsoft.com>"]
edition = "2021"
description = "High-speed zkSNARKs without trusted setup"
documentation = "https://docs.rs/spartan/"
readme = "README.md"
repository = "https://github.com/microsoft/Spartan"
license-file = "LICENSE"
keywords = ["zkSNARKs", "cryptography", "proofs"]

[dependencies]
curve25519-dalek = { version = "4.1.1", features = [
    "serde",
    "alloc",
    "rand_core",
], default-features = false }
merlin = { version = "3.0.0", default-features = false }
rand = "0.8.5"
rand_core = { version = "0.6", default-features = false }
digest = { version = "0.10.7", default-features = false }
sha3 = { version = "0.10.8", default-features = false }
byteorder = { version = "1.5.0", default-features = false }
rayon = { version = "1.10.0", optional = true }
serde = { version = "1.0.219", features = ["derive"], default-features = false }
bincode = { version = "1.3.3", default-features = false }
subtle = { version = "2.6.1", features = ["i128"], default-features = false }
itertools = { version = "0.14.0", default-features = false }
colored = { version = "3.0.0", default-features = false, optional = true }
flate2 = { version = "1.1.2" }

# Mobile-optimized memory management dependencies
tinyvec = { version = "1.6.0", optional = true }           # Lightweight vectors for mobile
smallvec = { version = "1.11.0", optional = true }         # Stack-allocated small vectors  
sized-chunks = { version = "0.7.0", optional = true }      # Fixed-size chunked processing

# Streaming and async processing
futures = { version = "0.3.28", optional = true }          # Async streaming primitives
tokio-stream = { version = "0.1.14", optional = true }     # Stream utilities
async-stream = { version = "0.3.5", optional = true }      # Async stream macros

# Memory mapping and lazy evaluation
memmap2 = { version = "0.9.5", optional = true }          # Memory-mapped files
once_cell = { version = "1.18.0", optional = true }       # Lazy static initialization
dashmap = { version = "6.1.0", optional = true }          # Concurrent HashMap

# Mobile-specific optimizations
cap = { version = "0.1.2", optional = true }              # Memory capacity limits
bytemuck = { version = "1.14.0", optional = true }        # Safe transmutation
thiserror = { version = "2.0.12", optional = true }       # Error handling for mobile

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.15", default-features = false, features = ["js"] }

[target.'cfg(any(target_os = "ios", target_os = "android"))'.dependencies]
# Mobile-specific memory management
jemalloc-sys = { version = "0.3.2", optional = true }     # Better memory allocator for mobile

[dev-dependencies]
criterion = "0.6.0"
typos = "0.10.33"
tokio = { version = "1.0", features = ["rt", "macros"] }

[lib]
name = "libspartan"
path = "src/lib.rs"

[[bin]]
name = "snark"
path = "profiler/snark.rs"
required-features = ["std"]

[[bin]]
name = "nizk"
path = "profiler/nizk.rs"
required-features = ["std"]

[[bench]]
name = "snark"
harness = false
required-features = ["std"]

[[bench]]
name = "nizk"
harness = false
required-features = ["std"]

[features]
default = ["std"]
std = [
    "digest/std",
    "merlin/std",
    "rand/std",
    "sha3/std",
    "byteorder/std",
    "serde/std",
    "subtle/std",
    "itertools/use_std",
    "flate2/rust_backend",
]
multicore = ["rayon"]
profile = ["colored"]
mobile = [
    "tinyvec",
    "smallvec",
    "sized-chunks",
    "futures",
    "tokio-stream",
    "async-stream",
    "memmap2",
    "once_cell",
    "dashmap",
    "cap",
    "bytemuck",
    "thiserror",
    "jemalloc-sys",
]
